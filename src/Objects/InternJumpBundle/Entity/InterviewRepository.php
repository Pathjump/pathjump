<?php

namespace Objects\InternJumpBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * InterviewRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InterviewRepository extends EntityRepository {

    /**
     * get today interviews
     */
    public function getTodayInterviews() {
        $query = $this->getEntityManager()->createQuery("
                    select count(i.id) as interviewsCount
                    FROM ObjectsInternJumpBundle:Interview i
                    where i.accepted = :status and i.interviewDate < :dayEnd and i.interviewDate > :dayStart
                ")->setParameters(array('status' => 'accepted', 'dayEnd' => new \DateTime('tomorrow midnight'), 'dayStart' => new \DateTime('midnight')));
        $result = $query->getResult();
        return $result['0']['interviewsCount'];
    }

    public function getCompanyInterviews($id) {
        $query = $this->getEntityManager()->createQuery("
                    select i FROM ObjectsInternJumpBundle:Interview i
                    where i.company = :id and i.interviewDate >= :todayDate
                    order by i.interviewDate asc
                ")->setParameters(array('id' => $id, 'todayDate' => new \DateTime()));
        return $query->getResult();
    }

    /**
     * This is to get user's [upcoming] interviews
     * Use: in TaskCotroller:studentAllTasksAction AT studentTasks.html.twig [i.e: user portal page in the side bar]
     * @param type $uid
     * @return array of interviews
     */
    public function getUpComingInterviews($uid) {
        $para = array();
        $para['userId'] = $uid;
        $today = new \DateTime('');
        $todayDate = $today->format('Y-m-d');
        $para['today'] = $todayDate;
        $dql = "
            SELECT i
            FROM ObjectsInternJumpBundle:Interview i
            JOIN i.internship ins
            WHERE i.user = :userId
            AND ins.activeFrom > :today
            ";

        $query = $this->getEntityManager()->createQuery($dql)->setParameters($para); //array('userId' => $uid)
        return $query->getResult();
    }

}