<?php

namespace Objects\InternJumpBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * CountryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CountryRepository extends EntityRepository {

    /**
     * this function will delete all countries
     */
    public function deleteAll() {
        $query = $this->getEntityManager()
                ->createQuery("
                     DELETE ObjectsInternJumpBundle:Country c
                    ");
        $query->execute();
    }

    /**
     * this function will get all countries countries name&id
     * use InternshipController:newAction
     * @author Ahmed
     */
    public function getAllCountries() {
        $query = $this->getEntityManager()
                ->createQuery('
            SELECT c.name,c.id
            FROM ObjectsInternJumpBundle:Country c
            order by c.name asc
            ');

        return $query->getResult();
    }

    /**
     * this function will get all country cities by country id
     * @author Ahmed
     * @param int $countryId
     */
    public function getCountryCities($countryId) {
        $query = $this->getEntityManager()
                        ->createQuery('
            SELECT c.name,c.id
            FROM ObjectsInternJumpBundle:City c
            JOIN c.country co
            WHERE co.id = :countryId
            order by c.name asc
            ')->setParameter('countryId', $countryId);

        return $query->getResult();
    }

    /**
     * this function will get all country states by country id
     * @author Ahmed
     * @param int $countryId
     */
    public function getCountryStates($countryId) {
        $query = $this->getEntityManager()
                        ->createQuery('
            SELECT s.name,s.id
            FROM ObjectsInternJumpBundle:State s
            JOIN s.country co
            WHERE co.id = :countryId
            order by s.name asc
            ')->setParameter('countryId', $countryId);

        return $query->getResult();
    }

}
