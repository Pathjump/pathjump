<?php

namespace Objects\InternJumpBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * CityRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CityRepository extends EntityRepository {

    /**
     * this function will delete all cities
     */
    public function deleteAll() {
        $query = $this->getEntityManager()
                ->createQuery("
                     DELETE ObjectsInternJumpBundle:City c
                    ");
        $query->execute();
    }

    /**
     * This function is to get auto complete cities according to text comes from User Search page
     * @author Ola
     * @param string $text
     * @return array of cities
     */
    public function autocompletecities($text, $country) {
        $em = $this->getEntityManager();
        $dql = "SELECT c.id, c.name 
           FROM ObjectsInternJumpBundle:City c
           WHERE c.name LIKE '" . $text . "%' 
           AND c.country = '" . $country . " '
           ORDER BY c.priority DESC";

        $result = $em->createQuery($dql)
                ->getResult();
        return $result;
    }

    /**
     * this function is used to get the cities
     * the main use in UserController:getCitiesAction
     * @author Mahmoud
     * @param string $cityName
     * @param string $cityCountry
     * @return array
     */
    public function getCities($cityName, $cityCountry) {
        $query = $this->getEntityManager()->createQuery("
            SELECT c
            FROM ObjectsInternJumpBundle:City c
            WHERE c.name LIKE :cityName
            AND c.country = :cityCountry
            ORDER BY c.priority DESC
            ")->setParameters(array('cityName' => "$cityName%", 'cityCountry' => $cityCountry))->setMaxResults(10);
        return $query->getResult();
    }

    /**
     * this function will increase the priority for the city
     * @author Mahmoud
     * @param integer $id the city id
     */
    public function increasePriority($id) {
        $query = $this->getEntityManager()
                ->createQuery('
            UPDATE ObjectsInternJumpBundle:City c
            SET c.priority = (c.priority + 1)
            WHERE c.id = :id
            ');
        $query->setParameter('id', $id);
        $query->execute();
    }

}
