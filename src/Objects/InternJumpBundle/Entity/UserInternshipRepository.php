<?php

namespace Objects\InternJumpBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * UserInternshipRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserInternshipRepository extends EntityRepository {

    /**
     * this function used to check if user apply to company by cv
     * @author ahmed
     * @param int $userId
     * @param int $cvId
     * @param int $companyId
     */
    public function checkUserCompanyJobApply($userId, $cvId, $companyId) {
        $dql = '
            SELECT ui
            FROM ObjectsInternJumpBundle:UserInternship ui
            JOIN ui.internship j
            JOIN j.company c
            WHERE ui.user = :userId
            AND ui.cv = :cvId
            AND c.id = :companyId
            ';
        $query = $this->getEntityManager()->createQuery($dql)
                ->setParameters(array('userId' => $userId, 'cvId' => $cvId, 'companyId' => $companyId));
        return $query->getResult();
    }

    /**
     * to get all Jobs for certain users in certain company
     * used: in add new task page in Ajax filling the listes
     * @author Ola
     * @param type $id
     * @return type
     */
    public function getAllUserJobs($uid, $cid) {
        $dql = '
            SELECT ui
            FROM ObjectsInternJumpBundle:UserInternship ui
            JOIN ui.internship j
            JOIN ui.user u
            WHERE u.id = :uId
            AND ui.status = :status
            AND j.company = :cId
            ';
        $query = $this->getEntityManager()->createQuery($dql)
                ->setParameters(array('uId' => $uid, 'cId' => $cid, 'status' => 'accepted'));
        return $query->getResult();
    }

    /**
     * this function will get all applyed users for a job
     * @author Ahmed
     * use InternshipController:showAction
     * @param int $jobId
     */
    public function getJobApplyedUsers($jobId) {
        $query = $this->getEntityManager()
                        ->createQuery('
            SELECT ui,u,s,c
            FROM ObjectsInternJumpBundle:UserInternship ui
            JOIN ui.internship j
            JOIN ui.cv c
            JOIN ui.user u
            LEFT JOIN u.socialAccounts s
            WHERE j.id = :jobId and ui.status = :status
            order by ui.createdAt desc
            ')->setParameters(array('jobId' => $jobId, 'status' => 'apply'));
        return $query->getResult();
    }

    /**
     * to get all the accepted users in a certain job
     * @author Ola
     * @param type $id
     * @return type
     */
    public function getAllJobsUsers($id) {
        $query = $this->getEntityManager()
                        ->createQuery('
            SELECT ui
            FROM ObjectsInternJumpBundle:UserInternship ui
            JOIN ui.internship j
            JOIN ui.user u
            WHERE j.id = :jobId
            AND ui.status = :status
            ')->setParameters(array('jobId' => $id, 'status' => 'accepted'));
        return $query->getResult();
    }

    /**
     *
     * @param type $uid
     */
    public function getAppliedJobs($uid) {

        $query = $this->getEntityManager()->createQuery("
            SELECT ui
            FROM ObjectsInternJumpBundle:UserInternship ui
            WHERE ui.user = :userid
            AND ui.status = 'apply'
            ")->setParameters(array('userid' => $uid));

        return $query->getResult();
    }

}